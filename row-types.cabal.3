cabal-version:       3.0

Name:                row-types
Version:             1.0.1.1
License:             MIT
License-file:        LICENSE
Author:              Daniel Winograd-Cort, Matthew Farkas-Dyck
Maintainer:          dwincort@gmail.com
homepage:            https://github.com/target/row-types
Build-Type:          Simple
Tested-With:         GHC == 8.6.5, GHC == 8.8.3, GHC == 8.10.3
Category:            Data, Data Structures
Synopsis:	           Open Records and Variants
Description:
  This package uses closed type families and type literals to implement open
  records and variants.
  The core is based off of the <https://hackage.haskell.org/package/CTRex CTRex>
  package, but it also includes polymorphic variants and a number of
  additional functions.  That said, it is not a proper superset of CTRex as it
  specifically forbids records from having more than one element of the same
  label.

extra-source-files:
  examples/Examples.lhs
  README.md
  CHANGELOG.md
  LICENSE
  NOTICE


common common-settings
  ghc-options: -Wall -Wno-name-shadowing -Wno-type-defaults -Wno-unticked-promoted-constructors
  default-extensions:
    AllowAmbiguousTypes,
    ConstraintKinds,
    DataKinds,
    EmptyCase,
    EmptyDataDecls,
    FlexibleContexts,
    FlexibleInstances,
    GADTs,
    InstanceSigs,
    KindSignatures,
    LambdaCase,
    MultiParamTypeClasses,
    OverloadedLabels,
    PatternGuards,
    PatternSynonyms,
    PolyKinds,
    RankNTypes,
    ScopedTypeVariables,
    TypeApplications,
    TypeFamilies,
    TypeOperators,
    TupleSections,
    ViewPatterns,
    UndecidableInstances


library
  import: common-settings
  Build-Depends:
    base >= 2 && < 5,
    constraints,
    deepseq >= 1.4,
    generic-lens >= 1.0.0.0,
    hashable >= 1.2,
    profunctors >= 5.0,
    text,
    unordered-containers >= 0.2
  Exposed-modules:
    Data.Row,
    Data.Row.Dictionaries,
    Data.Row.Internal,
    Data.Row.Records,
    Data.Row.Variants,
    Data.Row.Switch
  hs-source-dirs:
    src


library row-types-aeson
  import: common-settings
  visibility: public
  Build-Depends:
    aeson,
    base >= 2 && < 5,
    row-types,
    text
  Exposed-modules:
    Data.Row.Aeson
  hs-source-dirs:
    src/aeson


library row-types-barbies
  import: common-settings
  visibility: public
  Build-Depends:
    barbies,
    base >= 2 && < 5,
    row-types,
    text
  Exposed-modules:
    Data.Row.Barbies
  hs-source-dirs:
    src/barbies


benchmark perf
  import: common-settings
  type: exitcode-stdio-1.0
  main-is: Main.hs
  hs-source-dirs:
      benchmarks/perf
  build-depends:
    base >= 2 && < 6,
    row-types,
    deepseq >= 1.4,
    criterion >= 1.1


test-suite test
  import: common-settings
  type: exitcode-stdio-1.0
  main-is: Main.hs
  hs-source-dirs: tests, examples
  other-modules: Examples
  build-depends:
    base >= 2 && < 6,
    generic-lens >= 1.1.0.0,
    row-types


source-repository head
    type:     git
    location: https://github.com/target/row-types/
